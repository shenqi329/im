// Code generated by protoc-gen-go.
// source: login.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	login.proto
	message.proto
	registe.proto
	request.proto
	response.proto
	rpc.proto
	session.proto

It has these top-level messages:
	DeviceLoginRequest
	DeviceLoginResponse
	CreateMessageRequest
	CreateMessageResponse
	DeviceRegisteRequest
	DeviceRegisteResponse
	Request
	Response
	RpcInfo
	RpcRequest
	RpcResponse
	CreateSessionRequest
	CreateSessionResponse
	DeleteSessionUsersRequest
	AddSessionUsersRequest
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeviceLoginRequest struct {
	Rid      uint64 `protobuf:"varint,1,opt,name=Rid,json=rid" json:"Rid,omitempty"`
	Token    string `protobuf:"bytes,11,opt,name=Token,json=token" json:"Token,omitempty"`
	AppId    string `protobuf:"bytes,12,opt,name=AppId,json=appId" json:"AppId,omitempty"`
	DeviceId string `protobuf:"bytes,13,opt,name=DeviceId,json=deviceId" json:"DeviceId,omitempty"`
	Platform string `protobuf:"bytes,14,opt,name=Platform,json=platform" json:"Platform,omitempty"`
	UserId   string `protobuf:"bytes,15,opt,name=UserId,json=userId" json:"UserId,omitempty"`
}

func (m *DeviceLoginRequest) Reset()                    { *m = DeviceLoginRequest{} }
func (m *DeviceLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*DeviceLoginRequest) ProtoMessage()               {}
func (*DeviceLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeviceLoginRequest) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceLoginRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *DeviceLoginRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeviceLoginRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceLoginRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *DeviceLoginRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// messageType = 14
type DeviceLoginResponse struct {
	Rid  uint64 `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
}

func (m *DeviceLoginResponse) Reset()                    { *m = DeviceLoginResponse{} }
func (m *DeviceLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*DeviceLoginResponse) ProtoMessage()               {}
func (*DeviceLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeviceLoginResponse) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceLoginResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeviceLoginResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceLoginRequest)(nil), "pb.DeviceLoginRequest")
	proto.RegisterType((*DeviceLoginResponse)(nil), "pb.DeviceLoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Login service

type LoginClient interface {
	// Sends a greeting
	Login(ctx context.Context, in *DeviceLoginRequest, opts ...grpc.CallOption) (*DeviceLoginResponse, error)
}

type loginClient struct {
	cc *grpc.ClientConn
}

func NewLoginClient(cc *grpc.ClientConn) LoginClient {
	return &loginClient{cc}
}

func (c *loginClient) Login(ctx context.Context, in *DeviceLoginRequest, opts ...grpc.CallOption) (*DeviceLoginResponse, error) {
	out := new(DeviceLoginResponse)
	err := grpc.Invoke(ctx, "/pb.Login/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Login service

type LoginServer interface {
	// Sends a greeting
	Login(context.Context, *DeviceLoginRequest) (*DeviceLoginResponse, error)
}

func RegisterLoginServer(s *grpc.Server, srv LoginServer) {
	s.RegisterService(&_Login_serviceDesc, srv)
}

func _Login_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Login/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).Login(ctx, req.(*DeviceLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Login_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Login",
	HandlerType: (*LoginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Login_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login.proto",
}

func init() { proto.RegisterFile("login.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x4d, 0xd3, 0x84, 0x3a, 0xf5, 0x1f, 0xa3, 0xd4, 0xa1, 0xa7, 0x92, 0x53, 0x4f, 0x39,
	0xe8, 0xcd, 0x9b, 0xe8, 0x25, 0x20, 0x28, 0x41, 0x1f, 0xa0, 0xc9, 0x8c, 0x12, 0xac, 0xd9, 0x75,
	0x37, 0xf5, 0x81, 0x7c, 0x52, 0x99, 0xdd, 0x7a, 0x28, 0xb9, 0xcd, 0xf7, 0xfb, 0xb1, 0xb3, 0x1f,
	0x03, 0xf3, 0xad, 0xf9, 0xe8, 0xfa, 0xd2, 0x3a, 0x33, 0x18, 0x9c, 0xd8, 0xa6, 0xf8, 0x4d, 0x00,
	0x1f, 0xe5, 0xa7, 0x6b, 0xe5, 0x49, 0x4d, 0x2d, 0xdf, 0x3b, 0xf1, 0x03, 0x5e, 0x40, 0x5a, 0x77,
	0x4c, 0xc9, 0x2a, 0x59, 0x4f, 0xeb, 0xd4, 0x75, 0x8c, 0x57, 0x90, 0xbd, 0x9a, 0x4f, 0xe9, 0x69,
	0xbe, 0x4a, 0xd6, 0xc7, 0x75, 0x36, 0x68, 0x50, 0x7a, 0x6f, 0x6d, 0xc5, 0x74, 0x12, 0xe9, 0x46,
	0x03, 0x2e, 0x61, 0x16, 0x77, 0x56, 0x4c, 0xa7, 0x41, 0xcc, 0x78, 0x9f, 0xd5, 0xbd, 0x6c, 0x37,
	0xc3, 0xbb, 0x71, 0x5f, 0x74, 0x16, 0x9d, 0xdd, 0x67, 0x5c, 0x40, 0xfe, 0xe6, 0xc5, 0x55, 0x4c,
	0xe7, 0xc1, 0xe4, 0xbb, 0x90, 0x8a, 0x67, 0xb8, 0x3c, 0xe8, 0xe8, 0xad, 0xe9, 0xbd, 0x68, 0x49,
	0x77, 0x58, 0x12, 0x61, 0xda, 0x1a, 0x16, 0x9a, 0x84, 0xe7, 0x61, 0x56, 0xc6, 0xe2, 0x5b, 0x4a,
	0x23, 0xd3, 0xf9, 0xe6, 0x01, 0xb2, 0xb0, 0x0a, 0xef, 0xfe, 0x87, 0x45, 0x69, 0x9b, 0x72, 0x7c,
	0x88, 0xe5, 0xf5, 0x88, 0xc7, 0xcf, 0x8b, 0xa3, 0x26, 0x0f, 0x57, 0xbc, 0xfd, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0xbb, 0xd1, 0x09, 0x73, 0x54, 0x01, 0x00, 0x00,
}
