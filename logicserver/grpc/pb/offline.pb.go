// Code generated by protoc-gen-go.
// source: offline.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeviceOfflineRequest struct {
	Token  string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *DeviceOfflineRequest) Reset()                    { *m = DeviceOfflineRequest{} }
func (m *DeviceOfflineRequest) String() string            { return proto.CompactTextString(m) }
func (*DeviceOfflineRequest) ProtoMessage()               {}
func (*DeviceOfflineRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *DeviceOfflineRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *DeviceOfflineRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type DeviceOfflineResponse struct {
	Code string `protobuf:"bytes,1,opt,name=Code" json:"Code,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=Desc" json:"Desc,omitempty"`
}

func (m *DeviceOfflineResponse) Reset()                    { *m = DeviceOfflineResponse{} }
func (m *DeviceOfflineResponse) String() string            { return proto.CompactTextString(m) }
func (*DeviceOfflineResponse) ProtoMessage()               {}
func (*DeviceOfflineResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DeviceOfflineResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeviceOfflineResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceOfflineRequest)(nil), "pb.DeviceOfflineRequest")
	proto.RegisterType((*DeviceOfflineResponse)(nil), "pb.DeviceOfflineResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Offline service

type OfflineClient interface {
	Offline(ctx context.Context, in *DeviceOfflineRequest, opts ...grpc.CallOption) (*DeviceOfflineResponse, error)
}

type offlineClient struct {
	cc *grpc.ClientConn
}

func NewOfflineClient(cc *grpc.ClientConn) OfflineClient {
	return &offlineClient{cc}
}

func (c *offlineClient) Offline(ctx context.Context, in *DeviceOfflineRequest, opts ...grpc.CallOption) (*DeviceOfflineResponse, error) {
	out := new(DeviceOfflineResponse)
	err := grpc.Invoke(ctx, "/pb.Offline/Offline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Offline service

type OfflineServer interface {
	Offline(context.Context, *DeviceOfflineRequest) (*DeviceOfflineResponse, error)
}

func RegisterOfflineServer(s *grpc.Server, srv OfflineServer) {
	s.RegisterService(&_Offline_serviceDesc, srv)
}

func _Offline_Offline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceOfflineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfflineServer).Offline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Offline/Offline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfflineServer).Offline(ctx, req.(*DeviceOfflineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Offline_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Offline",
	HandlerType: (*OfflineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Offline",
			Handler:    _Offline_Offline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "offline.proto",
}

func init() { proto.RegisterFile("offline.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4f, 0x4b, 0xcb,
	0xc9, 0xcc, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x72, 0xe1,
	0x12, 0x71, 0x49, 0x2d, 0xcb, 0x4c, 0x4e, 0xf5, 0x87, 0x48, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x89, 0x70, 0xb1, 0x86, 0xe4, 0x67, 0xa7, 0xe6, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x41, 0x38, 0x42, 0x62, 0x5c, 0x6c, 0xa1, 0xc5, 0xa9, 0x45, 0x9e, 0x29, 0x12, 0x4c, 0x60,
	0x61, 0x28, 0x4f, 0xc9, 0x9e, 0x4b, 0x14, 0xcd, 0x94, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21,
	0x21, 0x2e, 0x16, 0xe7, 0xfc, 0x94, 0x54, 0xa8, 0x29, 0x60, 0x36, 0x48, 0xcc, 0x25, 0xb5, 0x38,
	0x19, 0x6a, 0x04, 0x98, 0x6d, 0xe4, 0xcd, 0xc5, 0x0e, 0xd5, 0x2a, 0xe4, 0x80, 0x60, 0x4a, 0xe8,
	0x15, 0x24, 0xe9, 0x61, 0x73, 0x9e, 0x94, 0x24, 0x16, 0x19, 0x88, 0x95, 0x4a, 0x0c, 0x49, 0x6c,
	0x60, 0xef, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xd4, 0x06, 0x8b, 0xef, 0x00, 0x00,
	0x00,
}
