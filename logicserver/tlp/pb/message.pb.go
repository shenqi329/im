// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateMessageRequest struct {
	Rid       uint64 `protobuf:"varint,1,opt,name=Rid" json:"Rid,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
	SessionId uint64 `protobuf:"varint,11,opt,name=SessionId" json:"SessionId,omitempty"`
	Type      uint32 `protobuf:"varint,12,opt,name=Type" json:"Type,omitempty"`
	Content   string `protobuf:"bytes,13,opt,name=Content" json:"Content,omitempty"`
	Id        string `protobuf:"bytes,14,opt,name=Id" json:"Id,omitempty"`
}

func (m *CreateMessageRequest) Reset()                    { *m = CreateMessageRequest{} }
func (m *CreateMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateMessageRequest) ProtoMessage()               {}
func (*CreateMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CreateMessageRequest) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *CreateMessageRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateMessageRequest) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *CreateMessageRequest) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateMessageRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CreateMessageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateMessageResponse struct {
	Rid  uint64 `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
}

func (m *CreateMessageResponse) Reset()                    { *m = CreateMessageResponse{} }
func (m *CreateMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateMessageResponse) ProtoMessage()               {}
func (*CreateMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateMessageResponse) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *CreateMessageResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CreateMessageResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateMessageRequest)(nil), "pb.CreateMessageRequest")
	proto.RegisterType((*CreateMessageResponse)(nil), "pb.CreateMessageResponse")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8f, 0xb1, 0x4e, 0xc4, 0x30,
	0x0c, 0x40, 0x95, 0xdc, 0xe9, 0xd0, 0x19, 0x7a, 0x42, 0x16, 0x20, 0x0f, 0x0c, 0xd5, 0x4d, 0x9d,
	0x58, 0xf8, 0x84, 0x4e, 0x19, 0x18, 0x08, 0xf0, 0x01, 0x6d, 0x63, 0xa1, 0x0e, 0x24, 0x21, 0x0e,
	0x03, 0xff, 0xc2, 0xc7, 0xa2, 0xa4, 0x45, 0x95, 0xd8, 0x9e, 0x5f, 0xa2, 0xe4, 0x19, 0x9a, 0x0f,
	0x16, 0x19, 0xde, 0xf9, 0x21, 0xa6, 0x90, 0x03, 0xea, 0x38, 0x9e, 0x7f, 0x14, 0xdc, 0xf4, 0x89,
	0x87, 0xcc, 0x4f, 0xcb, 0x99, 0xe5, 0xcf, 0x2f, 0x96, 0x8c, 0xd7, 0xb0, 0xb3, 0xb3, 0x23, 0xd5,
	0xaa, 0x6e, 0x6f, 0x0b, 0xe2, 0x1d, 0x1c, 0xde, 0x84, 0x93, 0x71, 0xa4, 0x5b, 0xd5, 0x1d, 0xed,
	0x3a, 0xe1, 0x3d, 0x1c, 0x5f, 0x58, 0x64, 0x0e, 0xde, 0x38, 0xba, 0xac, 0xf7, 0x37, 0x81, 0x08,
	0xfb, 0xd7, 0xef, 0xc8, 0x74, 0xd5, 0xaa, 0xae, 0xb1, 0x95, 0x91, 0xe0, 0xa2, 0x0f, 0x3e, 0xb3,
	0xcf, 0xd4, 0xd4, 0xa7, 0xfe, 0x46, 0x3c, 0x81, 0x36, 0x8e, 0x4e, 0x55, 0x6a, 0xe3, 0xce, 0xcf,
	0x70, 0xfb, 0xaf, 0x4e, 0x62, 0xf0, 0xc2, 0x25, 0x2f, 0x6d, 0x79, 0x69, 0xae, 0x1f, 0x4d, 0xc1,
	0xf1, 0x1a, 0x57, 0xb9, 0x38, 0xc7, 0x32, 0xd1, 0x6e, 0x71, 0x85, 0xc7, 0x43, 0x5d, 0xfe, 0xf1,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xa3, 0x5c, 0xcd, 0x0d, 0x01, 0x00, 0x00,
}
