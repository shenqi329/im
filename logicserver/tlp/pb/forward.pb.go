// Code generated by protoc-gen-go.
// source: forward.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	forward.proto
	login.proto
	message.proto
	registe.proto
	sync.proto

It has these top-level messages:
	ForwardTLPRequest
	ForwardTLPResponse
	DeviceLoginRequest
	DeviceLoginResponse
	DeviceOfflineRequest
	CreateMessageRequest
	CreateMessageResponse
	DeviceRegisteRequest
	DeviceRegisteResponse
	SyncMessage
	SyncFinInform
	SyncFinResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ForwardTLPRequest struct {
	Ric         uint64 `protobuf:"varint,1,opt,name=ric" json:"ric,omitempty"`
	MessageType uint32 `protobuf:"varint,11,opt,name=messageType" json:"messageType,omitempty"`
	ProtoBuf    []byte `protobuf:"bytes,12,opt,name=protoBuf,proto3" json:"protoBuf,omitempty"`
}

func (m *ForwardTLPRequest) Reset()                    { *m = ForwardTLPRequest{} }
func (m *ForwardTLPRequest) String() string            { return proto.CompactTextString(m) }
func (*ForwardTLPRequest) ProtoMessage()               {}
func (*ForwardTLPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ForwardTLPRequest) GetRic() uint64 {
	if m != nil {
		return m.Ric
	}
	return 0
}

func (m *ForwardTLPRequest) GetMessageType() uint32 {
	if m != nil {
		return m.MessageType
	}
	return 0
}

func (m *ForwardTLPRequest) GetProtoBuf() []byte {
	if m != nil {
		return m.ProtoBuf
	}
	return nil
}

type ForwardTLPResponse struct {
	Rid         uint64 `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Desc        string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	MessageType uint32 `protobuf:"varint,11,opt,name=messageType" json:"messageType,omitempty"`
	ProtoBuf    []byte `protobuf:"bytes,12,opt,name=protoBuf,proto3" json:"protoBuf,omitempty"`
}

func (m *ForwardTLPResponse) Reset()                    { *m = ForwardTLPResponse{} }
func (m *ForwardTLPResponse) String() string            { return proto.CompactTextString(m) }
func (*ForwardTLPResponse) ProtoMessage()               {}
func (*ForwardTLPResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ForwardTLPResponse) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *ForwardTLPResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ForwardTLPResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ForwardTLPResponse) GetMessageType() uint32 {
	if m != nil {
		return m.MessageType
	}
	return 0
}

func (m *ForwardTLPResponse) GetProtoBuf() []byte {
	if m != nil {
		return m.ProtoBuf
	}
	return nil
}

func init() {
	proto.RegisterType((*ForwardTLPRequest)(nil), "pb.ForwardTLPRequest")
	proto.RegisterType((*ForwardTLPResponse)(nil), "pb.ForwardTLPResponse")
}

func init() { proto.RegisterFile("forward.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xcb, 0x2f, 0x2a,
	0x4f, 0x2c, 0x4a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x4a, 0xe6,
	0x12, 0x74, 0x83, 0x08, 0x86, 0xf8, 0x04, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09,
	0x70, 0x31, 0x17, 0x65, 0x26, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x04, 0x81, 0x98, 0x42, 0x0a,
	0x5c, 0xdc, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x21, 0x95, 0x05, 0xa9, 0x12, 0xdc, 0x0a,
	0x8c, 0x1a, 0xbc, 0x41, 0xc8, 0x42, 0x42, 0x52, 0x5c, 0x1c, 0x60, 0x53, 0x9d, 0x4a, 0xd3, 0x24,
	0x78, 0x14, 0x18, 0x35, 0x78, 0x82, 0xe0, 0x7c, 0xa5, 0x1e, 0x46, 0x2e, 0x21, 0x64, 0x5b, 0x8a,
	0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x21, 0xd6, 0xa4, 0x20, 0xac, 0x49, 0x11, 0x12, 0xe2, 0x62, 0x49,
	0xce, 0x4f, 0x49, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x41, 0x62, 0x29, 0xa9,
	0xc5, 0xc9, 0x12, 0xcc, 0x10, 0x31, 0x10, 0x9b, 0x32, 0xe7, 0x24, 0xb1, 0x81, 0x59, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0xf8, 0x12, 0xc5, 0x0f, 0x01, 0x00, 0x00,
}
