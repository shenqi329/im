// Code generated by protoc-gen-go.
// source: registe.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeviceRegisteRequest struct {
	Rid      uint64 `protobuf:"varint,1,opt,name=Rid,json=rid" json:"Rid,omitempty"`
	SsoToken string `protobuf:"bytes,11,opt,name=SsoToken,json=ssoToken" json:"SsoToken,omitempty"`
	AppId    string `protobuf:"bytes,12,opt,name=AppId,json=appId" json:"AppId,omitempty"`
	DeviceId string `protobuf:"bytes,13,opt,name=DeviceId,json=deviceId" json:"DeviceId,omitempty"`
	Platform string `protobuf:"bytes,14,opt,name=Platform,json=platform" json:"Platform,omitempty"`
}

func (m *DeviceRegisteRequest) Reset()                    { *m = DeviceRegisteRequest{} }
func (m *DeviceRegisteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeviceRegisteRequest) ProtoMessage()               {}
func (*DeviceRegisteRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *DeviceRegisteRequest) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceRegisteRequest) GetSsoToken() string {
	if m != nil {
		return m.SsoToken
	}
	return ""
}

func (m *DeviceRegisteRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeviceRegisteRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceRegisteRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type DeviceRegisteResponse struct {
	Rid   uint64 `protobuf:"varint,1,opt,name=Rid,json=rid" json:"Rid,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=Code,json=code" json:"Code,omitempty"`
	Desc  string `protobuf:"bytes,3,opt,name=Desc,json=desc" json:"Desc,omitempty"`
	Token string `protobuf:"bytes,11,opt,name=Token,json=token" json:"Token,omitempty"`
}

func (m *DeviceRegisteResponse) Reset()                    { *m = DeviceRegisteResponse{} }
func (m *DeviceRegisteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeviceRegisteResponse) ProtoMessage()               {}
func (*DeviceRegisteResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *DeviceRegisteResponse) GetRid() uint64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceRegisteResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeviceRegisteResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *DeviceRegisteResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceRegisteRequest)(nil), "pb.DeviceRegisteRequest")
	proto.RegisterType((*DeviceRegisteResponse)(nil), "pb.DeviceRegisteResponse")
}

func init() { proto.RegisterFile("registe.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4a, 0xc5, 0x30,
	0x10, 0x40, 0xc9, 0x6f, 0x2b, 0xdf, 0x68, 0x45, 0x42, 0x85, 0xe0, 0xaa, 0x74, 0xd5, 0x95, 0x1b,
	0x4f, 0x20, 0x76, 0xd3, 0x9d, 0x44, 0x2f, 0xd0, 0x66, 0xc6, 0x12, 0xd4, 0x4e, 0xcc, 0x44, 0x0f,
	0xe2, 0x89, 0x25, 0x4d, 0x17, 0x22, 0x7f, 0xf9, 0xe6, 0x31, 0xc3, 0x63, 0x64, 0x1d, 0x70, 0x71,
	0x1c, 0xf1, 0xce, 0x07, 0x8a, 0xa4, 0x0e, 0x7e, 0xee, 0x7e, 0x84, 0x6c, 0x06, 0xfc, 0x76, 0x16,
	0x4d, 0x76, 0x06, 0x3f, 0xbf, 0x90, 0xa3, 0xba, 0x96, 0x85, 0x71, 0xa0, 0x45, 0x2b, 0xfa, 0xd2,
	0x14, 0xc1, 0x81, 0xba, 0x95, 0xc7, 0x67, 0xa6, 0x17, 0x7a, 0xc3, 0x55, 0x5f, 0xb4, 0xa2, 0x3f,
	0x37, 0x47, 0xde, 0x59, 0x35, 0xb2, 0x7a, 0xf0, 0x7e, 0x04, 0x7d, 0xb9, 0x89, 0x6a, 0x4a, 0x90,
	0x36, 0xf2, 0xed, 0x11, 0x74, 0x9d, 0x37, 0x60, 0xe7, 0xe4, 0x9e, 0xde, 0xa7, 0xf8, 0x4a, 0xe1,
	0x43, 0x5f, 0x65, 0xe7, 0x77, 0xee, 0x16, 0x79, 0xf3, 0xaf, 0x89, 0x3d, 0xad, 0x8c, 0x27, 0xa2,
	0x94, 0x2c, 0x1f, 0x09, 0x50, 0x1f, 0xb6, 0x13, 0xa5, 0x25, 0xc0, 0x34, 0x1b, 0x90, 0xad, 0x2e,
	0xf2, 0x0c, 0x90, 0x6d, 0x0a, 0xfc, 0x5b, 0x5e, 0xc5, 0x04, 0xf3, 0xd9, 0xf6, 0x88, 0xfb, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xda, 0xbd, 0xc8, 0x19, 0x01, 0x00, 0x00,
}
